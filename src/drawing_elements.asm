draw_platform:
    ; параметры:
    ; cx = x-позиция (колонка)
    ; dx = y-позиция (строка)
    ; bx = высота платформы
    ; ax = цвет

    pusha

    ; вычисляем адрес в видеопамяти: di = 2 * (y * 80 + x)
    mov di, dx              ; di = y
    imul di, 80             ; di = y * 80
    add di, cx              ; di = y * 80 + x
    shl di, 1               ; di *= 2 (каждый символ 2 байта)

    ; настройка символа и атрибута
    shl ax, 8
    mov al, 0xdb            ; символ: █ (полный блок)

    ; рисуем вертикальную линию
.draw_platform_loop:
    mov [es:di], ax         ; записываем символ с атрибутом

    ; переход к следующей строке (+160 байт)
    add di, 160             ; 80 символов * 2 байта = 160

    dec bx                  ; уменьшаем счетчик высоты
    jnz .draw_platform_loop ; повторяем если не закончили

    popa
    ret

draw_ball:
    ; параметры:
    ; cx = x-позиция (колонка)
    ; dx = y-позиция (строка)

    pusha

    ; вычисляем адрес в видеопамяти: di = 2 * (y * 80 + x)
    mov di, dx          ; di = y
    imul di, 80         ; di = y * 80
    add di, cx          ; di = y * 80 + x
    shl di, 1           ; di *= 2 (каждый символ 2 байта)

    ; настройка символа и атрибута
    shl ax, 8
    mov al, 0xdb        ; символ: █ (полный блок)

    mov [es:di], ax     ; записываем символ с атрибутом

    popa
    ret